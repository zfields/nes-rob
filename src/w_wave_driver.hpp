#ifndef W_WAVE_DRIVER_HPP
#define W_WAVE_DRIVER_HPP

#include "pulse_driver.hpp"

namespace nes { namespace rob {

class HardwareAbstractionLayer;

/**
 * \brief The W square wave implementation of the pulse driver interface
 *
 * This implementation typically requires some form of hardware modification,
 * which provides access to the ribbon cable running between the IC in R.O.B.s
 * head and the motherboard in the base. The pulses emitted are modeled after
 * the W square wave generated by the IC in R.O.B.'s head.
 */
class WWaveDriver final : public PulseDriver {
  public:
    /**
     * \brief <em> constructor </em>
     *
     * \param[in] hal A HardwareAbstractionLayer instance
     * \param[in] pin The digital GPIO pin used to generate pulses
     */
    WWaveDriver (HardwareAbstractionLayer * hal, unsigned int pin);
    nes::rob::error_code init (void * reserved = nullptr) override;
    nes::rob::error_code pulse (void * reserved = nullptr) const override;
    nes::rob::error_code rest (void * reserved = nullptr) const override;

  private:
    HardwareAbstractionLayer * const _hal;
    const unsigned int _pin;
};

}} // namespace nes::rob

#endif // W_WAVE_DRIVER_HPP
